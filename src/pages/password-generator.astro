---
import Layout from '../layouts/Layout.astro';
---

<Layout title="随机密码生成器">
  <main class="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">
    <div class="container mx-auto px-4 py-8 max-w-3xl">
      <!-- 标题区域 -->
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-4">随机密码生成器</h1>
        <p class="text-gray-600">
          支持在线生成随机密码，随机字符串。可以控制生成密码的复杂程度：可以包含数字，小写字母，大写字母，特殊符号等。
        </p>
      </div>

      <!-- 密码生成区域 -->
      <div class="bg-white rounded-lg shadow-md p-6">
        <div class="mb-6">
          <label class="text-gray-700 font-medium mb-2 block">生成的密码</label>
          <div class="flex gap-2">
            <input
              type="text"
              id="generatedPassword"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50"
              placeholder="您的密码将显示在这里"
              readonly
            />
            <button
              id="copyBtn"
              class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
            >
              复制
            </button>
          </div>
        </div>

        <!-- 配置选项 -->
        <div class="space-y-4">
          <div>
            <label class="text-gray-700 font-medium mb-2 block">
              长度: <span id="lengthValue">10</span>
            </label>
            <input
              type="range"
              id="length"
              min="4"
              max="32"
              value="10"
              class="w-full"
            />
          </div>

          <div>
            <label class="text-gray-700 font-medium mb-2 block">
              数字: <span id="numbersValue">3</span>
            </label>
            <input
              type="range"
              id="numbers"
              min="0"
              max="10"
              value="3"
              class="w-full"
            />
          </div>

          <div>
            <label class="text-gray-700 font-medium mb-2 block">
              符号: <span id="symbolsValue">1</span>
            </label>
            <input
              type="range"
              id="symbols"
              min="0"
              max="10"
              value="1"
              class="w-full"
            />
          </div>

          <div class="space-y-2">
            <label class="inline-flex items-center">
              <input type="checkbox" id="avoidAmbiguous" class="form-checkbox" checked />
              <span class="ml-2">避免使用易混淆的字符</span>
            </label>
            <div class="flex gap-4">
              <label class="inline-flex items-center">
                <input type="checkbox" id="lowercase" class="form-checkbox" checked />
                <span class="ml-2">小写字母</span>
              </label>
              <label class="inline-flex items-center">
                <input type="checkbox" id="uppercase" class="form-checkbox" checked />
                <span class="ml-2">大写字母</span>
              </label>
            </div>
          </div>
        </div>

        <button
          id="generateBtn"
          class="w-full mt-6 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
        >
          生成密码
        </button>
      </div>
    </div>
  </main>
</Layout>

<script>
const generatePassword = () => {
  const length = parseInt((document.getElementById('length') as HTMLInputElement).value);
  const numbers = parseInt((document.getElementById('numbers') as HTMLInputElement).value);
  const symbols = parseInt((document.getElementById('symbols') as HTMLInputElement).value);
  const lowercase = (document.getElementById('lowercase') as HTMLInputElement).checked;
  const uppercase = (document.getElementById('uppercase') as HTMLInputElement).checked;
  const avoidAmbiguous = (document.getElementById('avoidAmbiguous') as HTMLInputElement).checked;

  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';
  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  const numberChars = '0123456789';
  const symbolChars = '!@#$%^&*()_+-=[]{}|;:,.<>?';

  let chars = '';
  let password = '';

  if (lowercase) chars += lowercaseChars;
  if (uppercase) chars += uppercaseChars;
  if (numbers > 0) chars += numberChars;
  if (symbols > 0) chars += symbolChars;

  // 确保至少有一个字符集被选中
  if (!chars) {
    alert('请至少选择一种字符类型！');
    return;
  }

  // 生成密码
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * chars.length);
    password += chars[randomIndex];
  }

  // 更新输入框
  const passwordInput = document.getElementById('generatedPassword') as HTMLInputElement;
  passwordInput.value = password;
};

// 复制密码
const copyPassword = () => {
  const passwordInput = document.getElementById('generatedPassword') as HTMLInputElement;
  passwordInput.select();
  document.execCommand('copy');
  alert('密码已复制到剪贴板！');
};

// 更新滑块值显示
const updateValue = (id: string) => {
  const input = document.getElementById(id) as HTMLInputElement;
  const display = document.getElementById(`${id}Value`);
  if (display) display.textContent = input.value;
};

// 事件监听
document.addEventListener('DOMContentLoaded', () => {
  // 生成按钮
  const generateBtn = document.getElementById('generateBtn');
  if (generateBtn) generateBtn.addEventListener('click', generatePassword);

  // 复制按钮
  const copyBtn = document.getElementById('copyBtn');
  if (copyBtn) copyBtn.addEventListener('click', copyPassword);

  // 滑块值更新
  ['length', 'numbers', 'symbols'].forEach(id => {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', () => updateValue(id));
    }
  });

  // 初始生成一个密码
  generatePassword();
});
</script> 