---
import Layout from '../layouts/Layout.astro';
---

<Layout title="密码生成器 - Online Tools">
  <main class="max-w-4xl mx-auto px-4 py-4 sm:py-8">
    
    <div class="space-y-4 sm:space-y-6">
      <!-- 密码显示区域 -->
      <div class="relative">
        <div class="flex">
          <input
            type="text"
            id="passwordOutput"
            class="w-full p-3 sm:p-4 text-sm sm:text-base bg-gray-50 border border-gray-300 rounded-l-lg focus:outline-none"
            readonly
          />
          <button
            id="copyBtn"
            class="px-3 sm:px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded-r-lg transition-colors flex items-center justify-center"
            title="复制密码"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
            </svg>
          </button>
        </div>
        <div id="copyMessage" class="absolute left-0 -bottom-6 text-green-600 text-xs opacity-0 transition-opacity">
          已复制到剪贴板
        </div>
      </div>

      <!-- 设置区域 -->
      <div class="bg-gray-50 rounded-lg p-4 sm:p-6">
        <h2 class="text-base sm:text-lg font-semibold mb-3 sm:mb-4">密码设置</h2>
        
        <div class="space-y-3 sm:space-y-4">
          <!-- 密码长度 -->
          <div>
            <div class="flex justify-between items-center mb-1 sm:mb-2">
              <label for="lengthRange" class="text-sm sm:text-base text-gray-700">密码长度: <span id="lengthValue">12</span></label>
            </div>
            <input
              type="range"
              id="lengthRange"
              min="4"
              max="64"
              value="12"
              class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer"
            />
          </div>
          
          <!-- 字符类型选项 -->
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3 text-sm sm:text-base">
            <label class="flex items-center space-x-2 cursor-pointer">
              <input type="checkbox" id="includeUppercase" checked class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
              <span>包含大写字母 (A-Z)</span>
            </label>
            
            <label class="flex items-center space-x-2 cursor-pointer">
              <input type="checkbox" id="includeLowercase" checked class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
              <span>包含小写字母 (a-z)</span>
            </label>
            
            <label class="flex items-center space-x-2 cursor-pointer">
              <input type="checkbox" id="includeNumbers" checked class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
              <span>包含数字 (0-9)</span>
            </label>
            
            <label class="flex items-center space-x-2 cursor-pointer">
              <input type="checkbox" id="includeSymbols" checked class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
              <span>包含特殊符号 (!@#$%^&*)</span>
            </label>
          </div>
          
          <!-- 排除相似字符 -->
          <label class="flex items-center space-x-2 cursor-pointer text-sm sm:text-base">
            <input type="checkbox" id="excludeSimilar" class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
            <span>排除相似字符 (i, l, 1, L, o, 0, O)</span>
          </label>
          
          <!-- 排除重复字符 -->
          <label class="flex items-center space-x-2 cursor-pointer text-sm sm:text-base">
            <input type="checkbox" id="excludeDuplicates" class="rounded text-blue-600 focus:ring-blue-500 h-4 w-4" />
            <span>排除重复字符</span>
          </label>
        </div>
      </div>
      
      <!-- 生成按钮 -->
      <button
        id="generateBtn"
        class="w-full py-2 sm:py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm sm:text-base font-medium"
      >
        生成密码
      </button>
    </div>
  </main>
</Layout>

<script>
const generatePassword = () => {
  const length = parseInt((document.getElementById('lengthRange') as HTMLInputElement).value);
  const includeUppercase = (document.getElementById('includeUppercase') as HTMLInputElement).checked;
  const includeLowercase = (document.getElementById('includeLowercase') as HTMLInputElement).checked;
  const includeNumbers = (document.getElementById('includeNumbers') as HTMLInputElement).checked;
  const includeSymbols = (document.getElementById('includeSymbols') as HTMLInputElement).checked;
  const excludeSimilar = (document.getElementById('excludeSimilar') as HTMLInputElement).checked;
  const excludeDuplicates = (document.getElementById('excludeDuplicates') as HTMLInputElement).checked;

  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';
  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  const numberChars = '0123456789';
  const symbolChars = '!@#$%^&*()_+-=[]{}|;:,.<>?';

  let chars = '';
  let password = '';

  if (includeUppercase) chars += uppercaseChars;
  if (includeLowercase) chars += lowercaseChars;
  if (includeNumbers) chars += numberChars;
  if (includeSymbols) chars += symbolChars;

  // 确保至少有一个字符集被选中
  if (!chars) {
    alert('请至少选择一种字符类型！');
    return;
  }

  // 生成密码
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * chars.length);
    password += chars[randomIndex];
  }

  // 更新输入框
  const passwordInput = document.getElementById('passwordOutput') as HTMLInputElement;
  passwordInput.value = password;
};

// 复制密码
const copyPassword = () => {
  const passwordInput = document.getElementById('passwordOutput') as HTMLInputElement;
  passwordInput.select();
  document.execCommand('copy');
  alert('密码已复制到剪贴板！');
};

// 更新滑块值显示
const updateValue = (id: string) => {
  const input = document.getElementById(id) as HTMLInputElement;
  const display = document.getElementById(`${id}Value`);
  if (display) display.textContent = input.value;
};

// 事件监听
document.addEventListener('DOMContentLoaded', () => {
  // 生成按钮
  const generateBtn = document.getElementById('generateBtn');
  if (generateBtn) generateBtn.addEventListener('click', generatePassword);

  // 复制按钮
  const copyBtn = document.getElementById('copyBtn');
  if (copyBtn) copyBtn.addEventListener('click', copyPassword);

  // 滑块值更新
  ['lengthRange'].forEach(id => {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', () => updateValue(id));
    }
  });

  // 初始生成一个密码
  generatePassword();
});
</script> 